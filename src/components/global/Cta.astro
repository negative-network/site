---
import { Image } from "astro:assets";
import img from "@assets/images/contact-paperplane.svg";
---

<section id="contact" class="scrolled-to bg-zinc-100 overflow-hidden">
  <div
    class="flex-col items-center justify-center px-4 py-10 mx-auto md:p-40 w-full lg:max-w-[80%]"
  >
    <h2
      class="text-center text-4xl font-medium tracking-tight text-black md:text-5xl font-display"
    >
      Nous contacter
    </h2>

    <p class="my-10 text-gray-300 font-normal text-center mx-auto">
      Réponse sous 48h ouvrées maximum !
    </p>

    <div
      class="grid grid-cols-1 md:grid-cols-12 [grid-template-areas:'image''form'] md:[grid-template-areas:'form''image']"
    >
      <div class="md:col-span-8 [grid-area: form]">
        <form
          id="my-form"
          action="https://formspree.io/f/xdknkqyz"
          method="POST"
          class="flex flex-col p-2 mx-auto child:mb-4 child:rounded-md w-4/5 max-w-xl"
        >
          <input
            type="email"
            name="email"
            class="text-black border-gray-300"
            id="email"
            placeholder="Votre adresse mail"
            required
          />
          <textarea
            name="message"
            rows="7"
            class="text-black border-gray-300"
            id="message"
            placeholder="Votre message"
            required></textarea>
          <button
            id="my-form-button"
            class="px-4 py-2 text-white bg-black rounded hover:bg-white hover:text-black"
            >Envoyer</button
          >
          <p id="my-form-status"></p>
        </form>
      </div>

      <div
        class="md:col-span-4 [grid-area: image] flex items-center justify-center md:justify-start"
      >
        <Image
          src={img}
          alt="Paperplane"
          id="paperplane"
          class:list={"w-20 md:w-40 h-auto"}
        />
      </div>
    </div>

    <style>
      #paperplane {
        
      }

      #paperplane.move {
        animation-iteration-count: infinite;
        animation-name: move;
        animation-duration: 3000ms;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards;
        offset-path: path(
          "M1 323 c55-58 91-138 180-144 50-3 70 18 110 43C544 380 618-3 779 2s217 134 412 60"
        );
      }

      #paperplane.shake {
        animation-iteration-count: infinite;
        animation-name: shake;
        animation-duration: 100ms;
      }

      #paperplane.lift-off {
        animation-iteration-count: 1;
        animation-name: lift-off;
        animation-duration: 3000ms;
        animation-delay: 1000ms;
        animation-fill-mode: forwards;
      }

      @keyframes move {
        0% {
          offset-distance: 0%;
        }
        100% {
          offset-distance: 100%;
        }
      }

      @keyframes shake {
        0% {
          transform: rotate(1deg);
        }
        50% {
          transform: rotate(-1deg);
        }
        100% {
          transform: rotate(1deg);
        }
      }

      @keyframes lift-off {
        0% {
          transform: translateY(0);
        }
        100% {
          transform: translate(100vw, -100vh);
        }
      }
    </style>

    <script>
      let form = document.getElementById("my-form") as HTMLFormElement;
      let paperplane = document.getElementById(
        "paperplane"
      ) as HTMLImageElement;

      // form.addEventListener("change", function () {
      //   paperplane.classList.add("shake");
      // });

      async function handleSubmit(event) {
        event.preventDefault();

        paperplane.classList.add("shake");

        let status = document.getElementById("my-form-status");
        let data = new FormData(event.target);
        fetch(event.target.action, {
          method: form.method,
          body: data,
          headers: {
            Accept: "application/json",
          },
        })
          .then((response) => {
            if (response.ok) {
              paperplane.classList.remove("shake");
              paperplane.classList.add("lift-off");
              status.innerHTML = "Votre message a bien été envoyé !";
              form.reset();
            } else {
              response.json().then((data) => {
                if (Object.hasOwn(data, "errors")) {
                  status.innerHTML = data["errors"]
                    .map((error) => error["message"])
                    .join(", ");
                } else {
                  status.innerHTML =
                    "Hmm, il y a eu un problème. Veuillez réessayer.";
                }
              });
            }
          })
          .catch((error) => {
            status.innerHTML =
              "Hmm, il y a eu un problème. Vous pouvez nous contacter directement à l'adresse contact@negative-network.com";
          });
      }
      form.addEventListener("submit", handleSubmit);
    </script>
  </div>
</section>
